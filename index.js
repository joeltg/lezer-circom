// This file was generated by lezer-generator. You probably shouldn't edit it.
import {LRParser} from "@lezer/lr"
import {NodeProp} from "@lezer/common"
const spec_Identifier = {__proto__:null,pragma:12, circom:14, include:20, component:26, main:28, public:34, function:118, signal:128, input:130, output:136, var:142, assert:194, log:198, if:202, else:208, for:214, while:226, template:234, parallel:236}
export const parser = LRParser.deserialize({
  version: 13,
  states: "EtOnQPOOOOQO'#FT'#FTOOQO'#Fy'#FyOuQPO'#ExOOQO'#Ex'#ExOzQPO'#FSQOQPOOO!RQPO'#C`O!WQPO'#CeO!]QPO'#ChO!bQPO'#DhO!gQPO'#EtOOQO,5;d,5;dOOQO-E8v-E8vO!oQPO,58zOOQO,59P,59PO!tQPO,59SO!|QPO,5:SO!|QPO,5;`O#RQPO,5;`OOQO1G.f1G.fO#WQPO'#CkO#]QPO1G.nO#bQPO1G.nO#gQPO'#DjO#oQPO1G/nO#oQPO1G0zO!|QPO1G0zO#tQPO,59VO#yQPO'#CqOOQO7+$Y7+$YO#]QPO7+$YO$OQPO'#FUOOQO'#Dk'#DkO$ZQPO,5:UO%^QQO'#FzOOQO'#Dl'#DlOOQO7+%Y7+%YOOQO'#Ew'#EwOOQO7+&f7+&fO#oQPO7+&fO%eQPO1G.qO&OQQO'#CrOOQO,59],59]OOQO<<Gt<<GtO&VQPO'#EyO&[QPO,5;pOOQO1G/p1G/pO%mQQO'#CwO&gQPO'#CvO%mQQO'#C{O'|QPO'#FYOOQO'#F`'#F`O(gQQO'#DXOOQO'#Fh'#FhO*cQPO'#D]OOQO'#F_'#F_O+lQPO'#F_OOQO'#FZ'#FZO-VQPO'#CuOOQO'#FY'#FYOOQO'#GO'#GOO-[QPO'#EVOOQO'#GY'#GYO-aQPO'#EZOOQO'#F{'#F{OOQO'#Gf'#GfO-lQPO'#E|OOQO'#E|'#E|O-qQQO,5<fOOQO,5<f,5<fO-xQPO'#DsO.TQPO'#DtO.YQPO'#DxO._QPO'#E`O.dQPO'#EbO.iQPO'#EdO.nQPO'#EjO.sQPO'#EpOOQO<<JQ<<JQO.xQPO7+$]O.}QPO'#D]O/kQPO'#FXOOQO'#Ct'#CtO/sQPO,59^OOQO,5;e,5;eOOQO-E8w-E8wO/xQPO,59cO0TQPO,59iO%mQQO,59eO%mQQO,59fO0[QPO,59gO&rQPO'#C|O(gQQO,59jO(gQQO,59kO(gQQO,59lO(gQQO,59mO(gQQO,59nO(gQQO,59oO(gQQO,59pO(gQQO,59qO(gQQO,59rO(gQQO,59tO(gQQO,59uO(gQQO,59vO(gQQO,59hO(gQQO,59{O(gQQO,59|O(gQQO,59}O(gQQO,5:OO(gQQO,5:PO(gQQO'#C}O1eQPO,59sO2nQPO'#D^O%mQQO'#D_OOQO'#Ez'#EzO4aQPO,59wO4hQPO,59wO5UQQO,5:eO%mQQO,5:fO%mQQO,5:gO%mQQO,5:hO%mQQO,5:iO%mQQO,5:jO%mQQO,5:kO%mQQO,5:lOOQO,5:m,5:mOOQO,5:n,5:nO%mQQO,5:oO%mQQO,5:pO%mQQO,5:rO%mQQO,5:sO%mQQO,5:tO%mQQO,5:vO%mQQO,5:xO(gQQO,59aOOQO,5:q,5:qO5]QPO,5:uO5]QPO,5:wO%mQQO,5:yOOQO,5;h,5;hOOQO-E8z-E8zOOQO1G2Q1G2QO5bQPO,5:XO5gQPO,5:]O5lQPO,5:_O5wQPO,5:`O6VQPO,5:dO%mQQO,5:zO%mQQO,5:|O%mQQO,5;OO6eQQO,5;UO%mQQO,5;[O7YQPO<<GwO7_QPO,59wO%mQQO'#E{O9_QPO,5;sOOQO1G.x1G.xOOQO1G.}1G.}OOQO1G/T1G/TOOQO1G/P1G/PO9gQPO1G/QO:ZQPO1G/UO;yQPO1G/VO=iQPO1G/WOOQO1G/X1G/XO?fQPO1G/YOAcQPO1G/ZOC`QPO1G/[OE]QPO1G/]OF{QPO1G/^OHkQPO1G/`OJZQPO1G/aOKyQPO1G/bOMiQPO1G/SOM|QPO1G/gONaQPO1G/hONtQPO1G/iO! XQPO1G/jO! lQPO1G/kO!!PQPO,59iOOQO,59x,59xO!!WQPO,59yOOQO-E8x-E8xO5UQQO1G0PO!!]QPO1G/cO!$cQQO'#DvOOQO'#F|'#F|OOQO1G0P1G0POOQO1G0Q1G0QOOQO1G0R1G0ROOQO1G0S1G0SOOQO1G0T1G0TOOQO1G0U1G0UOOQO1G0V1G0VOOQO1G0W1G0WOOQO1G0Z1G0ZOOQO1G0[1G0[OOQO1G0^1G0^OOQO1G0_1G0_OOQO1G0`1G0`OOQO1G0b1G0bOOQO1G0d1G0dO!$mQPO'#DfO!$tQPO1G.{O!$yQPO'#D]OOQO1G0a1G0aOOQO1G0c1G0cOOQO1G0e1G0eO!%XQPO1G/sO!%dQPO1G/wO%mQQO'#DpOOQO'#E}'#E}O!%oQPO1G/yO!%zQPO1G/zO5UQQO1G/zO!&YQPO1G0OO#]QPO1G0OO!&hQPO1G0fO!&sQPO1G0hO!'OQPO1G0hO!'VQPO'#EfO!'bQPO1G0jOOQO'#El'#ElO!'gQPO1G0pO!'lQPO'#ErO!'wQPO1G0vOOQOAN=cAN=cOOQO,5;g,5;gOOQO-E8y-E8yOOQO1G/e1G/eOOQO7+%k7+%kO!'|QPO'#F}OOQO'#Dw'#DwO!(UQPO,5:bO(gQQO7+$gO!(ZQPO7+%_O!(fQPO7+%cO!(qQPO,5:[OOQO-E8{-E8{O5UQQO7+%fOOQO7+%f7+%fO#]QPO7+%jOOQO7+%j7+%jOOQO7+&Q7+&QOOQO7+&S7+&SO!(vQQO7+&UO%mQQO7+&[O!(vQQO7+&bO5UQQO'#FOO!(}QPO,5<iOOQO1G/|1G/|O!)VQPO'#DgOOQO<<HR<<HROOQO1G/v1G/vOOQO<<IQ<<IQOOQO<<IU<<IUO!)pQPO'#EgOOQO'#Eg'#EgO!)uQQO<<IpO!*yQPO'#EmO!+UQPO<<IvO!+ZQPO'#EsOOQO'#Es'#EsOOQO<<I|<<I|OOQO,5;j,5;jOOQO-E8|-E8|OOQO,5;R,5;RO!(vQQOAN?[O6eQQOAN?bOOQO,5;_,5;_O!+`QPO'#EiOOQO'#Ei'#EiOOQOG24vG24vOOQO'#En'#EnO!+eQPOG24|OOQO,5;T,5;TO!(vQQOLD*hO!+jQPO'#EoOOQO'#Eo'#EoOOQO!$'NS!$'NSOOQO,5;Z,5;Z",
  stateData: "!+o~O#uOSPOSQOS~OUVOYWO]XO!]YO#iZO~O#s#vP~P]O$l[O~O#s#vX~P]OV^O~OZ_O~O^`O~OTaO~OTbO#jcO~OWdO~O`eO#zfO~OghO~OTkO~OalO~OTmO~O#zoO~OTpOl#xP~O`sO~ObyO~OgzO~O#y}Ol#xXc#xX~Ol!PO~OT!XO]!kOg!QO!S!YO!b!iO!i!jO#T!lO#V!mO#X!nO#_!oO#e!pO$Q!SO$_!VO%P!`O~Od!hO~P$`OTpOc#xP~OT!sOg!QO!S!YO$Q!SO$_!VO~Ol#{P~P%mOT!wO~O#y}Ol#xac#xa~O$O!{O$P!|O$jjX~O$T#PO$U#QO$V#RO$W#SO$X#TO$Y#UO$Z#VO$]#WO$^#XO$`#YO$a#ZO$b#[O$d#]O$e#^O$f#_O$g#`O$h#aO$i#bO~O%T#|X%V#|X%X#|Xl#|X#y#|Xc#|X$l#|X~P&rOT!sOg#cO!S!YO$_!VO~Ob#fOgzO$c#eO$T!PX$U!PX$V!PX$W!PX$X!PX$Y!PX$Z!PX$]!PX$^!PX$`!PX$a!PX$b!PX$d!PX$e!PX$f!PX$g!PX$h!PX$i!PX%T!PX%V!PX%X!PX~O#z#jO$s#kO$t#lO$u#mO$v#nO$w#oO$x#pO$y#qO$z#rO${#sO$}#tO%O#uO%Q#vO%R#wO%S#xO%U!PX%W!PX~P(uO%U#yO%W#zO$T$RX$U$RX$V$RX$W$RX$X$RX$Y$RX$Z$RX$]$RX$^$RX$`$RX$a$RX$b$RX$d$RX$e$RX$f$RX$g$RX$h$RX$i$RX%T$RX%V$RX%X$RX~O$j#{O~OT#|O~O%T#}O%V$OO%X$PO~O$l$QO~Od$SO~P$`OT$VO!c$TO!f$UO~OT$WO~OT$XO~Og$YO~Og$ZO~Og$[O~Og$]O~Og$^O~Oc$_O~Ol!PX#y!PX$O!PX$P!PX$j!PXc!PX$l!PX$k!PX~P(uO#y$aOl#{X~Ol$cO~Ol$dO$O!{O$P!|O~Ol$eO~P&rO$O!{O$P!|O$joaloa$loa~O$T#PO$U#QO$V#RO$W#SO$X#TO$Y#UO$Z#VO$]#WO$^#XO$`#YO$a#ZO$b#[O~O$d{a$e{a$f{a$g{a$h{a$i{a%T{a%V{a%X{al{a#y{a$O{a$P{a$j{ac{a$l{a$k{a~P0mOT${O~Ob#fO$T!Pa$U!Pa$V!Pa$W!Pa$X!Pa$Y!Pa$Z!Pa$]!Pa$^!Pa$`!Pa$a!Pa$b!Pa$d!Pa$e!Pa$f!Pa$g!Pa$h!Pa$i!Pa%T!Pa%U!Pa%V!Pa%W!Pa%X!Pa~O#z%OO~P2sOl!Pa#y!Pa$O!Pa$P!Pa$j!Pac!Pa$l!Pa$k!Pa~P2sOb%QO~P%mOT%eO~OT%iO~OT%jO~Ob%kO$l!gal!ga~Ob%kO#z%oO$l!hal!ha~Ob%kO#z%qO$l!lal!la~OT!XO]!kOg!QO!S!YO!b!iO!i!jO#T!lO#V!mO$Q!SO$_!VO%P!`O~Od%{O~Ob#fOl!Pa#y!Pa$T!Pa$U!Pa$V!Pa$W!Pa$X!Pa$Y!Pa$Z!Pa$]!Pa$^!Pa$`!Pa$a!Pa$b!Pa$d!Pa$e!Pa$f!Pa$g!Pa$h!Pa$i!Pa%T!Pa%V!Pa%X!Pa$O!Pa$P!Pa$j!Pac!Pa$l!Pa$k!Pa~O#y$aOl#{a~O$O!{O$Pni$jnilni$lni~O$V#RO$W#SO$X#TO$Y#UO$Z#VO~O$Tri$Uri$]ri$^ri$`ri$ari$bri$dri$eri$fri$gri$hri$iri%Tri%Vri%Xrilri#yri$Ori$Pri$jricri$lri$kri~P9xO$Tsi$Usi$]si$^si$`si$asi$bsi$dsi$esi$fsi$gsi$hsi$isi%Tsi%Vsi%Xsilsi#ysi$Osi$Psi$jsicsi$lsi$ksi~P9xO$W#SO$Tti$Uti$Vti$Xti$Yti$Zti$]ti$^ti$`ti$ati$bti$dti$eti$fti$gti$hti$iti%Tti%Vti%Xtilti#yti$Oti$Pti$jticti$lti$kti~O$W#SO$Tvi$Uvi$Vvi$Xvi$Yvi$Zvi$]vi$^vi$`vi$avi$bvi$dvi$evi$fvi$gvi$hvi$ivi%Tvi%Vvi%Xvilvi#yvi$Ovi$Pvi$jvicvi$lvi$kvi~O$W#SO$Twi$Uwi$Vwi$Xwi$Ywi$Zwi$]wi$^wi$`wi$awi$bwi$dwi$ewi$fwi$gwi$hwi$iwi%Twi%Vwi%Xwilwi#ywi$Owi$Pwi$jwicwi$lwi$kwi~O$W#SO$Txi$Uxi$Vxi$Xxi$Yxi$Zxi$]xi$^xi$`xi$axi$bxi$dxi$exi$fxi$gxi$hxi$ixi%Txi%Vxi%Xxilxi#yxi$Oxi$Pxi$jxicxi$lxi$kxi~O$T#PO$U#QO$a#ZO$b#[O$]yi$^yi$`yi$dyi$eyi$fyi$gyi$hyi$iyi%Tyi%Vyi%Xyilyi#yyi$Oyi$Pyi$jyicyi$lyi$kyi~P9xO$T#PO$U#QO$]#WO$`#YO$a#ZO$b#[O$^zi$dzi$ezi$fzi$gzi$hzi$izi%Tzi%Vzi%Xzilzi#yzi$Ozi$Pzi$jziczi$lzi$kzi~P9xO$T#PO$U#QO$]#WO$a#ZO$b#[O$^|i$`|i$d|i$e|i$f|i$g|i$h|i$i|i%T|i%V|i%X|il|i#y|i$O|i$P|i$j|ic|i$l|i$k|i~P9xO$T#PO$U#QO$]}i$^}i$`}i$a}i$b}i$d}i$e}i$f}i$g}i$h}i$i}i%T}i%V}i%X}il}i#y}i$O}i$P}i$j}ic}i$l}i$k}i~P9xO$T#PO$U#QO$]!Oi$^!Oi$`!Oi$a!Oi$b!Oi$d!Oi$e!Oi$f!Oi$g!Oi$h!Oi$i!Oi%T!Oi%V!Oi%X!Oil!Oi#y!Oi$O!Oi$P!Oi$j!Oic!Oi$l!Oi$k!Oi~P9xO$Opi$Ppi$jpilpi$lpi~P0mO$O!Ti$P!Ti$j!Til!Ti$l!Ti~P0mO$O!Ui$P!Ui$j!Uil!Ui$l!Ui~P0mO$O!Vi$P!Vi$j!Vil!Vi$l!Vi~P0mO$O!Wi$P!Wi$j!Wil!Wi$l!Wi~P0mO$O!Xi$P!Xi$j!Xil!Xi$l!Xi~P0mOl$eO~P0mOc&OO~Ob#fO$T!Pi$U!Pi$V!Pi$W!Pi$X!Pi$Y!Pi$Z!Pi$]!Pi$^!Pi$`!Pi$a!Pi$b!Pi$d!Pi$e!Pi$f!Pi$g!Pi$h!Pi$i!Pi%T!Pi%U!Pi%V!Pi%W!Pi%X!Pil!Pi#y!Pi$O!Pi$P!Pi$j!Pic!Pi$l!Pi$k!Pi~Ob%QOc$qP~P%mO$k!YX~P0mO$k&TO~Ob#fO$c#eO$l!PXl!PX~Ob%kO$l!ail!ai~Ob%kO$l!eil!ei~Ob%kO$l!gil!gi~Ob%kO#z&YO$l!hil!hi~Ob%kO#z&[O$l!lil!li~Ol&^O$O!{O$P!|O~Ol&_O$O!{O$P!|O~Ol&_O~P&rO$O!{O$P!|Ol#YX~Ol&`O~O$l&aO~O$O!{O$P!|Ol#fX~Ol&bO~O#y&cOc$qX~Oc&eO~Ob%kO$l!aql!aq~Ob%kO$l!eql!eq~Oc&hO~O`sO~P6eO#y&cOc$qa~O%T!ZX%V!ZX%X!ZXl!ZX#y!ZXc!ZX$l!ZX~P0mO$l&uO~O#[&vOT#Wy]#Wyd#Wyg#Wy!S#Wy!b#Wy!i#Wy#T#Wy#V#Wy#X#Wy#_#Wy#e#Wy$Q#Wy$_#Wy%P#Wy~O$O!{O$P!|O$l#aX~O$l&wO~O$l&xO~O$l'OO~Ol'PO~O$l'TO~O",
  goto: ";^%ZPPPP%[PPPP%[PP%[PP%`PPPPP%c'TP'Y'](Q(uP(u(u(u(u)s+X+X+X+X+X+X+X,m,m,m,m,m,m.R/o/tP(u(u(u(u(u/}0Q0TP0X0b0e0hPP0r0hP0h0hP1O1W0h0h1Z1Z1Z1Z1Z1Z1Z1Z1Z1e1e1e1e1e1e0h0h0h0h0h0hP0hP1oP1s1vP1y1oP1|2P2S2V1oP2Y2]0TPP2`2f2l2r3R3X3_3uPPP3{4O4SPP4Y4]5zPPP7[)sPPPPPPP)sPPPPPPPPPPPPPPPP9t9x:]:s;V0hPPPPPPPPP0hPPPPPPPPPPP;YTPOTRg`QnfQ|o#t!Ysz!Q!S!V!g!{!|#P#Q#R#S#T#U#V#W#X#Y#Z#[#]#^#_#`#a#b#c#f#j#k#l#m#n#o#p#q#t#u#v#w#x#y#z#{$P$Y$Z$[$]$^$a%O%Q%k%o&T&Y&`&a&b&c&v&w'PQ&]%qR&j&[V{m!X!sR!vz!e!^sz!g#f#j#k#l#m#n#o#p#q#t#u#v#w#x#y#z$P$]$a%O%Q%k%o&Y&`&b&c&v&w'P!e!]sz!g#f#j#k#l#m#n#o#p#q#t#u#v#w#x#y#z$P$]$a%O%Q%k%o&Y&`&b&c&v&w'P!w![sz!Q!S!g!{!|#f#j#k#l#m#n#o#p#q#t#u#v#w#x#y#z$P$Y$Z$[$]$^$a%O%Q%k%o&Y&`&a&b&c&v&w'P#u!Ysz!Q!S!V!g!{!|#P#Q#R#S#T#U#V#W#X#Y#Z#[#]#^#_#`#a#b#c#f#j#k#l#m#n#o#p#q#t#u#v#w#x#y#z#{$P$Y$Z$[$]$^$a%O%Q%k%o&T&Y&`&a&b&c&v&w'P#u!Usz!Q!S!V!g!{!|#P#Q#R#S#T#U#V#W#X#Y#Z#[#]#^#_#`#a#b#c#f#j#k#l#m#n#o#p#q#t#u#v#w#x#y#z#{$P$Y$Z$[$]$^$a%O%Q%k%o&T&Y&`&a&b&c&v&w'P#u!Wsz!Q!S!V!g!{!|#P#Q#R#S#T#U#V#W#X#Y#Z#[#]#^#_#`#a#b#c#f#j#k#l#m#n#o#p#q#t#u#v#w#x#y#z#{$P$Y$Z$[$]$^$a%O%Q%k%o&T&Y&`&a&b&c&v&w'P#d!Yz!Q!S!V!{!|#P#Q#R#S#T#U#V#W#X#Y#Z#[#]#^#_#`#a#b#c#f#j#k#l#m#n#o#p#q#t#u#v#w#x#y#z#{$P$Y$Z$[$^$a%O%Q%k%o&T&Y&a&c`!Zs!g$]&`&b&v&w'PQ%f#}R%g$OV#i!X!s%e_#g!X!s#h#i$`%P%eR%d#{R&g&TTQOTQiaQjbRxkRrhRuia!cs!g$]&`&b&v&w'Pe%l$V$W$X%i%j%m%n%p&U&V]%R#j%O%Q%o&Y&cR&S%Qa!_s!g$]&`&b&v&w'Pa!as!g$]&`&b&v&w'PT!ds!gR%v$[R&m&`R&{&vR%x$]R&o&aR&}&wR'S'PR%z$^R&r&bQwjR!qxQTOR]TQ!OpR!x!OQ#h!XS$`!s%eU$}#h$`%PR%P#iQ$b!tR%}$bQ!gsR$R!gQ%m$VQ%n$WQ%p$XQ&U%iQ&V%jZ&X%m%n%p&U&VQ&d&QR&t&dRUOTROTQqhR!ryR!uz`!bs!g$]&`&b&v&w'PQ!tzQ$|#f[%R#j%O%Q%o&Y&cQ%T#kQ%U#lQ%V#mQ%W#nQ%X#oQ%Y#pQ%Z#qQ%[#tQ%]#uQ%^#vQ%_#wQ%`#xQ%a#yQ%b#zQ%h$PQ%|$aR&W%k!d!Rsz!g#f#j#k#l#m#n#o#p#q#t#u#v#w#x#y#z$P$]$a%O%Q%k%o&Y&`&b&c&v&w'PQ!y!QQ!}!SQ$f!{Q$g!|Q%r$YQ%s$ZQ%u$[Q%y$^R&n&a!d!Tsz!g#f#j#k#l#m#n#o#p#q#t#u#v#w#x#y#z$P$]$a%O%Q%k%o&Y&`&b&c&v&w'PQ!z!Q^#O!S!{!|$Y$[$^&aQ#d!VQ$h#PQ$i#QQ$j#RQ$k#SQ$l#TQ$m#UQ$n#VQ$o#WQ$p#XQ$q#YQ$r#ZQ$s#[Q$t#]Q$u#^Q$v#_Q$w#`Q$x#aQ$y#bQ$z#cQ%c#{Q%t$ZR&f&TTSOTQtiSvjxQ&l&`Q&q&bQ&z&vR'R'PS!es!gQ%w$]Q&k&`Q&p&bQ&y&vQ&|&wR'Q'PQ%S#jQ&P%OQ&Q%QQ&Z%oQ&i&YR&s&cR&R%QT!fs!g",
  nodeNames: "âš  LineComment BlockComment Circuit Pragma Identifier pragma circom CompilerVersion Include include String MainComponentDeclaration component main PublicSignalsList OpenBrace public OpenBracket CloseBracket CloseBrace Call ParameterValueList OpenParen ParameterValues Conditional Condition BooleanExpressionGroup CloseParen BooleanAnd BooleanOr BooleanNegation LT NumericExpressionGroup Addition Subtraction Multiplication Exponentiation Division Quotient Remainder BitwiseAnd BitwiseOr BitwiseComplement ExclusiveOr RightShift LeftShift Value Signal ArrayIndex Number LTE GT GTE EQ NEQ TrueValue FalseValue FunctionDeclaration function ParameterList Parameters FunctionBody InputSignalDeclaration signal input ArraySize OutputSignalDeclaration output IntermediateSignalDeclaration VariableDeclaration var Array Items ComponentDeclaration Assignment AdditionAssignment SubtractionAssignment MultiplicationAssignment ExponentiationAssignment DivisionAssignment QuotientAssignment RemainderAssignment Increment Decrement BitwiseAndAssignment BitwiseOrAssignment BitwiseComplementAssignment ExclusiveOrAssignment RightShiftAssignment LeftShiftAssignment AssignSignalRight AssignSignalLeft AssignConstraintSignalRight AssignConstraintSignalLeft ConstrainSignal Assert assert Log log If if IfCondition IfBody else ElseBody ForLoop for ForLoopInitialization ForLoopCondition ForLoopStepCode ForLoopBody WhileLoop while WhileLoopCondition WhileLoopBody TemplateDeclaration template parallel TemplateBody",
  maxTerm: 194,
  nodeProps: [
    [NodeProp.group, -5,4,9,12,58,116,"CircomContent",-18,21,25,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,"NumericExpression",-10,27,29,30,31,32,51,52,53,54,55,"BooleanExpression"],
    [NodeProp.closedBy, 16,"CloseBrace",18,"CloseBracket",23,"CloseParen"],
    [NodeProp.openedBy, 19,"OpenBracket",20,"OpenBrace",28,"OpenParen"]
  ],
  skippedNodes: [0,1,2],
  repeatNodeCount: 7,
  tokenData: "0T~RqXY#YYZ#Ypq#Yqr#hrs#uuv&Rvw&`xy&uyz&zz{'P{|'n|}(T}!O(Y!O!P(w!P!Q(|!Q![*a![!]+Z!]!^+`!^!_+e!_!`,j!`!a-X!a!b-v!c!}-{!}#O.a#O#P.f#P#Q.s#Q#R.x#R#S-{#T#o-{#o#p/V#p#q/[#q#r/q#r#s/v~#_R#u~XY#YYZ#Ypq#YR#mP$QQ!_!`#pP#uO$iP~#xUpq#uqr#urs$[s#O#u#O#P$a#P~#u~$aOZ~~$dXrs#u!P!Q#u#O#P#u#U#V#u#Y#Z#u#b#c#u#f#g#u#h#i#u#i#j%P~%SR!Q![%]!c!i%]#T#Z%]~%`R!Q![%i!c!i%i#T#Z%i~%lR!Q![%u!c!i%u#T#Z%u~%xR!Q![#u!c!i#u#T#Z#u~&WP$Z~!_!`&Z~&`O$y~~&eQ$]~vw&k!_!`&p~&pO$O~~&uO$}~~&zOg~~'POl~~'UQ$V~z{'[!_!`'i~'aP$W~!_!`'d~'iO$v~~'nO$u~~'sQ$T~{|'y!_!`(O~(OO$z~~(TO$s~~(YO#y~~(_Q$U~}!O(e!_!`(r~(jP${~!`!a(m~(rO%T~~(wO$t~~(|O$c~~)RR$X~z{)[!P!Q*P!_!`*[~)_ROz)[z{)h{~)[~)kTOz)[z{)h{!P)[!P!Q)z!Q~)[~*POQ~~*UQP~OY*PZ~*P~*aO$w~R*fQ!SQ!O!P*l!Q![*aP*oP!Q![*rP*uQ!O!P*{!Q![*rP+OP!Q![+RP+WPWP!Q![+R~+`O$k~~+eO$l~~+jR$d~}!O+s!^!_,O!_!`,]~+vP}!O+y~,OO%U~~,TP$b~!_!`,W~,]O%S~~,bP$e~!_!`,e~,jO%W~~,oP#z~!_!`,r~,wQ$h~!_!`,}!`!a-S~-SO%X~~-XO%V~~-^Q$f~!_!`-d!`!a-i~-iO$g~~-nP$a~!_!`-q~-vO%R~~-{O$j~~.QTT~tu-{!Q![-{!c!}-{#R#S-{#T#o-{~.fOb~~.kP$Y~!_!`.n~.sO$x~~.xOc~~.}P$`~!_!`/Q~/VO%Q~~/[O`~~/aQ$^~!_!`/g#p#q/l~/lO%O~~/qO$P~~/vOd~~/{P$_~!_!`0O~0TO%P~",
  tokenizers: [0, 1],
  topRules: {"Circuit":[0,3]},
  specialized: [{term: 5, get: value => spec_Identifier[value] || -1}],
  tokenPrec: 0
})
